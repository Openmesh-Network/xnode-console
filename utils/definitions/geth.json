{
  "name": "Go-Ethereum",
  "desc": "Deploy Go Ethereum (Geth) with a streamlined setup to create a fully functional Ethereum node. Geth serves as the official Go implementation of the Ethereum protocol, enabling users to interact with the Ethereum blockchain.",
  "longDesc": "Go Ethereum (often referred to as Geth) is an open-source client for the Ethereum blockchain written in Go. It allows users to run an Ethereum node, mine ether, create smart contracts, and interact with decentralized applications (dApps) on the Ethereum network.\n\n**Key Features:**\n- **One-Click Deployment:** Easily deploy Geth using Docker, simplifying the setup process for new users.\n- **Scalability:** Supports both light and full nodes, accommodating various use cases from personal projects to enterprise solutions.\n- **Privacy:** Users maintain full control over their private keys and transactions by running their own node.\n- **API Compatibility:** Provides a JSON-RPC API for seamless integration with other applications, allowing developers to build on top of the Ethereum platform.\n- **Mining Capabilities:** Geth can be configured to mine ether, contributing to the network's security and transaction validation.",
  "useCases": "- **Developers:** Use Geth to test and deploy smart contracts, and interact with dApps.\n- **Enterprises:** Establish private Ethereum networks for internal applications or use Geth to connect to the public Ethereum network for external services.\n- **Researchers and Educators:** Run Ethereum nodes for blockchain research, testing new protocols, or teaching blockchain technology.",
  "support": "- **Community Forums:** Engage with the Ethereum community through the [Ethereum Stack Exchange](https://ethereum.stackexchange.com/) and the [Geth GitHub Discussions](https://github.com/ethereum/go-ethereum/discussions) for help and insights.\n- **Documentation:** Access comprehensive user guides and API references at the [Geth Documentation](https://geth.ethereum.org/docs/) and [Go Ethereum GitHub](https://github.com/ethereum/go-ethereum).\n- **Troubleshooting Help:** Review the official [Geth Releases](https://github.com/ethereum/go-ethereum/releases) for updates and troubleshooting tips related to specific versions.\n\nThis template provides a clear overview of Go Ethereumâ€™s features and practical applications, highlighting its importance in the Ethereum ecosystem. For more detailed information, visit the [official Geth website](https://geth.ethereum.org/).",
  "nixName": "geth",
  "specs": {
    "ram": 16384,
    "storage": 4194304
  },
  "tags": ["RPC", "Blockchain", "Ethereum", "Validator"],
  "website": "https://geth.ethereum.org/",
  "implemented": true,
  "logo": "https://geth.ethereum.org/favicon.ico",
  "options": [
    {
      "name": "ethnode.enable",
      "desc": "Whether to enable Go Ethereum Node.",
      "nixName": "ethnode.enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "ethnode.port",
      "desc": "Port number Go Ethereum will be listening on, both TCP and UDP.",
      "nixName": "ethnode.port",
      "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
      "value": "30303"
    },
    {
      "name": "ethnode.http",
      "desc": "HTTP settings",
      "nixName": "ethnode.http",
      "type": "attribute set",
      "value": "{ }",
      "options": [
        {
          "name": "enable",
          "desc": "Whether to enable Go Ethereum HTTP API.",
          "nixName": "enable",
          "type": "boolean",
          "value": "false"
        },
        {
          "name": "address",
          "desc": "Listen address of Go Ethereum HTTP API.",
          "nixName": "address",
          "type": "string",
          "value": "127.0.0.1"
        },
        {
          "name": "port",
          "desc": "Port number of Go Ethereum HTTP API.",
          "nixName": "port",
          "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
          "value": "8545"
        },
        {
          "name": "apis",
          "desc": "APIs to enable over WebSocket",
          "nixName": "apis",
          "type": "list of string",
          "value": "[\"net\"  \"eth\"]"
        }
      ]
    },
    {
      "name": "ethnode.websocket",
      "desc": "Websocket settings",
      "nixName": "ethnode.websocket",
      "type": "attribute set",
      "value": "{ }",
      "options": [
        {
          "name": "enable",
          "desc": "Whether to enable Go Ethereum WebSocket API.",
          "nixName": "enable",
          "type": "boolean",
          "value": "false"
        },
        {
          "name": "address",
          "desc": "Listen address of Go Ethereum WebSocket API.",
          "nixName": "address",
          "type": "string",
          "value": "127.0.0.1"
        },
        {
          "name": "port",
          "desc": "Port number of Go Ethereum WebSocket API.",
          "nixName": "port",
          "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
          "value": "8546"
        },
        {
          "name": "apis",
          "desc": "APIs to enable over WebSocket",
          "nixName": "apis",
          "type": "list of string",
          "value": "[\"net\"  \"eth\"]"
        }
      ]
    },
    {
      "name": "ethnode.authrpc",
      "desc": "RPC settings",
      "nixName": "ethnode.authrpc",
      "type": "attribute set",
      "value": "{ }",
      "options": [
        {
          "name": "enable",
          "desc": "Whether to enable Go Ethereum Auth RPC API.",
          "nixName": "enable",
          "type": "boolean",
          "value": "false"
        },
        {
          "name": "address",
          "desc": "Listen address of Go Ethereum Auth RPC API.",
          "nixName": "address",
          "type": "string",
          "value": "127.0.0.1"
        },
        {
          "name": "port",
          "desc": "Port number of Go Ethereum Auth RPC API.",
          "nixName": "port",
          "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
          "value": "8551"
        },
        {
          "name": "vhosts",
          "desc": "List of virtual hostnames from which to accept requests.",
          "nixName": "vhosts",
          "type": "null or (list of string)",
          "value": "[ \"localhost\" ]"
        },
        {
          "name": "jwtsecret",
          "desc": "Path to a JWT secret for authenticated RPC endpoint.",
          "nixName": "jwtsecret",
          "type": "string",
          "value": ""
        }
      ]
    },
    {
      "name": "ethnode.metrics",
      "desc": "Metrics settings",
      "nixName": "ethnode.metrics",
      "type": "attribute set",
      "value": "{ }",
      "options": [
        {
          "name": "enable",
          "desc": "Whether to enable Go Ethereum prometheus metrics.",
          "nixName": "enable",
          "type": "boolean",
          "value": "false"
        },
        {
          "name": "address",
          "desc": "Listen address of Go Ethereum metrics service.",
          "nixName": "address",
          "type": "string",
          "value": "127.0.0.1"
        },
        {
          "name": "port",
          "desc": "Port number of Go Ethereum metrics service.",
          "nixName": "port",
          "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
          "value": "6060"
        }
      ]
    },
    {
      "name": "ethnode.syncmode",
      "desc": "Blockchain sync mode.",
      "nixName": "ethnode.syncmode",
      "type": "one of \"snap\", \"fast\", \"full\", \"light\"",
      "value": "\"snap\""
    },
    {
      "name": "ethnode.gcmode",
      "desc": "Blockchain garbage collection mode.",
      "nixName": "ethnode.gcmode",
      "type": "one of \"full\", \"archive\"",
      "value": "\"full\""
    },
    {
      "name": "ethnode.maxpeers",
      "desc": "Maximum peers to connect to.",
      "nixName": "ethnode.maxpeers",
      "type": "signed integer",
      "value": "50"
    },
    {
      "name": "ethnode.extraArgs",
      "desc": "Additional arguments passed to Go Ethereum.",
      "nixName": "ethnode.extraArgs",
      "type": "list of string",
      "value": "[ ]"
    }
  ]
}
