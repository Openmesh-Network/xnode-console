{
  "name": "Kubo",
  "desc": "Deploy Kubo to create a powerful and versatile implementation of the InterPlanetary File System (IPFS). Kubo serves as a peer-to-peer network that facilitates efficient data storage and retrieval across distributed systems.",
  "longDesc": "Kubo is an open-source implementation of IPFS, designed to provide a decentralized method for storing and sharing files. It enables users to connect to a global network of peers to access and distribute content seamlessly.\n\n**Key Features:**\n- **One-Click Deployment:** Easily set up Kubo using Docker or other containerization options for quick installation and configuration.\n- **Scalability:** Designed to handle large datasets and numerous concurrent connections, making it suitable for both personal and enterprise applications.\n- **Privacy and Security:** Ensures data is stored and transferred securely across a decentralized network, minimizing the risk of data breaches.\n- **API Compatibility:** Offers a comprehensive API for integration with other applications and services, enabling enhanced functionalities.\n- **Content Addressing:** Uses unique content identifiers (CIDs) to ensure reliable and efficient data retrieval.",
  "useCases": "- **Developers:** Integrate Kubo into applications that require decentralized file storage and retrieval, enhancing data resilience and accessibility.\n- **Enterprises:** Use Kubo to create distributed applications that leverage IPFS for content delivery and data management.\n- **Educators:** Implement Kubo in educational projects to demonstrate decentralized technology and its applications in real-world scenarios.",
  "support": "- **Community Forums:** Engage with the Kubo community for support and discussions through the [Kubo GitHub Repository](https://github.com/ipfs/kubo).\n- **Documentation:** Comprehensive guides and user manuals are available at the [IPFS Documentation](https://docs.ipfs.io/) for detailed reference on setup and usage.\n- **Troubleshooting Help:** Access the issues section on GitHub to report bugs and find community-contributed solutions.\n\nThis template provides an overview of Kuboâ€™s functionalities and practical applications, emphasizing its role in decentralized data storage. For more detailed information, visit the [official Kubo GitHub page](https://github.com/ipfs/kubo).",
  "nixName": "kubo",
  "specs": {
    "ram": 0,
    "storage": 0
  },
  "tags": ["File Transfer - Distributed Filesystems"],
  "website": "https://ipfs.io/",
  "implemented": false,
  "logo": "https://ipfs.io/favicon.ico",
  "options": [
    {
      "name": "autoMigrate",
      "desc": "Whether Kubo should try to run the fs-repo-migration at startup.",
      "nixName": "autoMigrate",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "autoMount",
      "desc": "Whether Kubo should try to mount /ipfs and /ipns at startup.",
      "nixName": "autoMount",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "dataDir",
      "desc": "The data dir for Kubo",
      "nixName": "dataDir",
      "type": "string",
      "value": "if versionAtLeast config.system.stateVersion 17.09\nthen /var/lib/ipfs\nelse /var/lib/ipfs/.ipfs\n"
    },
    {
      "name": "defaultMode",
      "desc": "systemd service that is enabled by default",
      "nixName": "defaultMode",
      "type": "one of \"online\", \"offline\", \"norouting\"",
      "value": "\"online\""
    },
    {
      "name": "emptyRepo",
      "desc": "If set to false, the repo will be initialized with help files",
      "nixName": "emptyRepo",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "enable",
      "desc": "Whether to enable the Interplanetary File System (WARNING: may cause severe network degradation). NOTE: after enabling this option and rebuilding your system, you need to log out and back in for the IPFS_PATH environment variable to be present in your shell. Until you do that, the CLI tools won\u2019t be able to talk to the daemon by default .",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "enableGC",
      "desc": "Whether to enable automatic garbage collection",
      "nixName": "enableGC",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "extraFlags",
      "desc": "Extra flags passed to the Kubo daemon",
      "nixName": "extraFlags",
      "type": "list of string",
      "value": "[ ]"
    },
    {
      "name": "group",
      "desc": "Group under which the Kubo daemon runs",
      "nixName": "group",
      "type": "string",
      "value": "ipfs"
    },
    {
      "name": "localDiscovery",
      "desc": "Whether to enable local discovery for the Kubo daemon. This will allow Kubo to scan ports on your local network. Some hosting services will ban you if you do this.",
      "nixName": "localDiscovery",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "package",
      "desc": "The kubo package to use.",
      "nixName": "package",
      "type": "package",
      "value": "pkgs.kubo"
    },
    {
      "name": "serviceFdlimit",
      "desc": "The fdlimit for the Kubo systemd unit or null to have the daemon attempt to manage it",
      "nixName": "serviceFdlimit",
      "type": "null or signed integer",
      "value": "null"
    },
    {
      "name": "settings",
      "desc": "Attrset of daemon configuration. See [https://github.com/ipfs/kubo/blob/master/docs/config.md](https://github.com/ipfs/kubo/blob/master/docs/config.md) for reference. You can\u2019t set Identity or Pinning.",
      "nixName": "settings",
      "type": "JSON value",
      "value": "{ }"
    },
    {
      "name": "settings.Addresses.API",
      "desc": "Multiaddr or array of multiaddrs describing the address to serve the local HTTP API on. In addition to the multiaddrs listed here, the daemon will also listen on a Unix domain socket. To allow the ipfs CLI tools to communicate with the daemon over that socket, add your user to the correct group, e.g. users.users.alice.extraGroups = [ config.services.kubo.group ];",
      "nixName": "settings.Addresses.API",
      "type": "string or list of string",
      "value": "[ ]"
    },
    {
      "name": "settings.Addresses.Gateway",
      "desc": "Where the IPFS Gateway can be reached",
      "nixName": "settings.Addresses.Gateway",
      "type": "string or list of string",
      "value": "\"/ip4/127.0.0.1/tcp/8080\""
    },
    {
      "name": "settings.Addresses.Swarm",
      "desc": "Where Kubo listens for incoming p2p connections",
      "nixName": "settings.Addresses.Swarm",
      "type": "list of string",
      "value": "[\n  \"/ip4/0.0.0.0/tcp/4001\"\n  \"/ip6/::/tcp/4001\"\n  \"/ip4/0.0.0.0/udp/4001/quic-v1\"\n  \"/ip4/0.0.0.0/udp/4001/quic-v1/webtransport\"\n  \"/ip6/::/udp/4001/quic-v1\"\n  \"/ip6/::/udp/4001/quic-v1/webtransport\"\n]"
    },
    {
      "name": "settings.Mounts.IPFS",
      "desc": "Where to mount the IPFS namespace to",
      "nixName": "settings.Mounts.IPFS",
      "type": "string",
      "value": "/ipfs"
    },
    {
      "name": "settings.Mounts.IPNS",
      "desc": "Where to mount the IPNS namespace to",
      "nixName": "settings.Mounts.IPNS",
      "type": "string",
      "value": "/ipns"
    },
    {
      "name": "startWhenNeeded",
      "desc": "Whether to use socket activation to start Kubo when needed.",
      "nixName": "startWhenNeeded",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "user",
      "desc": "User under which the Kubo daemon runs",
      "nixName": "user",
      "type": "string",
      "value": "ipfs"
    }
  ]
}
