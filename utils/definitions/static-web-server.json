{
  "name": "Static Web Server",
  "desc": "Deploy a Static Web Server to serve static files efficiently over the web. This lightweight server is designed for hosting HTML, CSS, JavaScript, and image files, making it ideal for websites and applications that do not require server-side processing.",
  "longDesc": "A Static Web Server is a type of web server that delivers static content directly to the client without any server-side processing. It is optimized for serving fixed files, which makes it faster and less resource-intensive compared to dynamic servers.\n\n**Key Features:**\n- **One-Click Deployment:** Easily set up using Docker or other container orchestration tools for rapid installation and accessibility.\n- **Scalability:** Capable of handling high volumes of traffic, making it suitable for small personal projects as well as large-scale applications.\n- **Privacy and Security:** Offers basic security features and does not process user data, enhancing privacy for hosted content.\n- **Lightweight and Fast:** Minimal resource usage ensures quick response times and efficient content delivery.\n- **Customizable Configuration:** Allows users to configure settings such as caching, compression, and directory listings to optimize performance.",
  "useCases": "- **Developers:** Host personal projects or documentation sites without the overhead of a full web server.\n- **Enterprises:** Serve marketing landing pages or static content as part of a larger web application architecture.\n- **Educators:** Use for teaching web development fundamentals by providing students with a platform to deploy static websites.",
  "support": "- **Community Forums:** Engage with users and developers through forums or discussion boards related to static web serving.\n- **Documentation:** Comprehensive guides and setup instructions are available on the [Static Web Server GitHub Repository](https://github.com/static-web-server/static-web-server) for detailed user reference.\n- **Troubleshooting Help:** Access the Issues section on GitHub to report bugs and find community-contributed solutions.\n\nThis template provides a clear overview of the Static Web Serverâ€™s functionalities and practical applications, emphasizing its importance for hosting static content. For more detailed information, visit the [official Static Web Server GitHub page](https://github.com/static-web-server/static-web-server).",
  "nixName": "static-web-server",
  "specs": {
    "ram": 0,
    "storage": 0
  },
  "tags": ["Web Servers"],
  "website": "https://static-web-server.net/",
  "implemented": false,
  "logo": "https://static-web-server.net/assets/sws.svg",
  "options": [
    {
      "name": "configuration",
      "desc": "Configuration for Static Web Server. See https://static-web-server.net/configuration/config-file/. NOTE: Don\u2019t set \u201chost\u201d, \u201cport\u201d, or \u201croot\u201d here. They will be ignored. Use the top-level \u201clisten\u201d and \u201croot\u201d options instead.",
      "nixName": "configuration",
      "type": "TOML value",
      "value": "{ }"
    },
    {
      "name": "enable",
      "desc": "Whether to enable Static Web Server.",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "listen",
      "desc": "The \u201cListenStream\u201d used in static-web-server.socket. This is equivalent to SWS\u2019s \u201chost\u201d and \u201cport\u201d options. See here for specific syntax: https://www.freedesktop.org/software/systemd/man/systemd.socket.html#ListenStream=",
      "nixName": "listen",
      "type": "string",
      "value": "[::]:8787"
    },
    {
      "name": "root",
      "desc": "The location of files for SWS to serve. Equivalent to SWS\u2019s \u201croot\u201d config value. NOTE: This folder must exist before starting SWS.",
      "nixName": "root",
      "type": "path",
      "value": ""
    }
  ]
}
