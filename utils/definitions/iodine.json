{
  "name": "iodine",
  "desc": "Deploy Iodine with a streamlined setup to create a DNS tunneling solution. Iodine enables users to tunnel IPv4 data through a DNS server, facilitating secure connections in environments where traditional ports may be blocked.",
  "longDesc": "Iodine is an open-source tool designed for tunneling network traffic through DNS. It allows users to establish connections that bypass restrictions, making it useful for various network applications, especially in security-sensitive scenarios.\n\n**Key Features:**\n- **One-Click Deployment:** Easily deploy Iodine using Docker, streamlining the setup process for both beginners and experienced users.\n- **Scalability:** Supports multiple clients and can handle various network loads, making it suitable for both small and large deployments.\n- **Privacy and Security:** Encrypts data transmitted over the DNS tunnel, enhancing the security of network communications.\n- **API Compatibility:** Allows integration with other applications and services for automation and enhanced functionality.\n- **Cross-Platform Support:** Works on multiple operating systems, including Linux, Windows, and macOS, providing flexibility in deployment environments.",
  "useCases": "- **Network Administrators:** Utilize Iodine to create secure remote access solutions in restrictive network environments.\n- **Developers:** Test applications that require reliable connections, even when traditional ports are blocked.\n- **Security Professionals:** Use Iodine for penetration testing and security assessments, ensuring comprehensive network security evaluations.",
  "support": "- **Community Forums:** Connect with other users and developers for support through the [Iodine GitHub Repository](https://github.com/yarrick/iodine).\n- **Documentation:** Comprehensive setup guides and instructions are available at the [Iodine Documentation](https://code.kryo.se/iodine/) for user reference.\n- **Troubleshooting Help:** Access community-contributed solutions and report issues through the GitHub issues section for additional support.\n\nThis template provides a clear overview of Iodineâ€™s functionalities, emphasizing its capabilities for secure DNS tunneling. For more detailed information, visit the [official Iodine GitHub page](https://github.com/yarrick/iodine).",
  "nixName": "iodine",
  "specs": {
    "ram": 0,
    "storage": 0
  },
  "tags": ["Proxy"],
  "website": "http://code.kryo.se/iodine/",
  "implemented": false,
  "logo": "",
  "options": [
    {
      "name": "clients",
      "desc": "Each attribute of this option defines a systemd service that runs iodine. Many or none may be defined. The name of each service is iodine-\u00abname\u00bb where \u00abname\u00bb is the name of the corresponding attribute name.",
      "nixName": "clients",
      "type": "attribute set of (submodule)",
      "value": "{ }"
    },
    {
      "name": "clients.<name>.extraConfig",
      "desc": "Additional command line parameters",
      "nixName": "clients.<name>.extraConfig",
      "type": "string",
      "value": ""
    },
    {
      "name": "clients.<name>.passwordFile",
      "desc": "Path to a file containing the password.",
      "nixName": "clients.<name>.passwordFile",
      "type": "string",
      "value": ""
    },
    {
      "name": "clients.<name>.relay",
      "desc": "DNS server to use as an intermediate relay to the iodined server",
      "nixName": "clients.<name>.relay",
      "type": "string",
      "value": ""
    },
    {
      "name": "clients.<name>.server",
      "desc": "Hostname of server running iodined",
      "nixName": "clients.<name>.server",
      "type": "string",
      "value": ""
    },
    {
      "name": "server.domain",
      "desc": "Domain or subdomain of which nameservers point to us",
      "nixName": "server.domain",
      "type": "string",
      "value": ""
    },
    {
      "name": "server.enable",
      "desc": "enable iodined server",
      "nixName": "server.enable",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "server.extraConfig",
      "desc": "Additional command line parameters",
      "nixName": "server.extraConfig",
      "type": "string",
      "value": ""
    },
    {
      "name": "server.ip",
      "desc": "The assigned ip address or ip range",
      "nixName": "server.ip",
      "type": "string",
      "value": ""
    },
    {
      "name": "server.passwordFile",
      "desc": "File that contains password",
      "nixName": "server.passwordFile",
      "type": "string",
      "value": ""
    }
  ]
}
