{
  "name": "Gogs",
  "desc": "Deploy Gogs with a straightforward setup to create a self-hosted Git service. Gogs is designed to provide a simple and efficient way to manage Git repositories, enabling teams to collaborate on projects seamlessly.",
  "longDesc": "Gogs is an open-source Git service that offers a lightweight, self-hosted platform for hosting and managing Git repositories. It aims to provide a fast and easy-to-use interface for developers to collaborate on projects without the need for third-party services.\n\n**Key Features:**\n- **One-Click Deployment:** Simplified installation using Docker or pre-built binaries for quick access.\n- **Scalability:** Capable of handling a large number of repositories and users, making it suitable for both small teams and large organizations.\n- **Privacy and Security:** Users maintain complete control over their repositories, ensuring data privacy and security.\n- **API Compatibility:** Provides a RESTful API for integrating with other tools and automating workflows.\n- **User-Friendly Interface:** Intuitive web interface for managing repositories, issues, and pull requests, enhancing user experience.",
  "useCases": "- **Developers:** Host personal or team projects with a focus on collaboration and version control.\n- **Enterprises:** Implement a private Git service to manage internal projects securely while maintaining compliance.\n- **Educational Institutions:** Provide students with a platform to learn about version control and collaborative software development.",
  "support": "- **Community Forums:** Connect with the Gogs community for support and discussions through the [Gogs GitHub Discussions](https://github.com/gogs/gogs/discussions).\n- **Documentation:** Comprehensive guides and installation instructions are available at the [Gogs Documentation](https://gogs.io/docs/) for user reference.\n- **Troubleshooting Help:** Access the [Gogs GitHub Repository](https://github.com/gogs/gogs) for issue tracking, community contributions, and solutions.\n\nThis template highlights Gogs' capabilities for managing Git repositories, emphasizing its importance for collaborative development. For more detailed information, visit the [official Gogs website](https://gogs.io/).",
  "nixName": "gogs",
  "specs": {
    "ram": 0,
    "storage": 0
  },
  "tags": ["Software Development - Project Management"],
  "website": "https://gogs.io",
  "implemented": false,
  "logo": "https://gogs.io/img/favicon.png",
  "options": [
    {
      "name": "appName",
      "desc": "Application name.",
      "nixName": "appName",
      "type": "string",
      "value": "Gogs: Go Git Service"
    },
    {
      "name": "cookieSecure",
      "desc": "Marks session cookies as \u201csecure\u201d as a hint for browsers to only send them via HTTPS. This option is recommend, if Gogs is being served over HTTPS.",
      "nixName": "cookieSecure",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "database.host",
      "desc": "Database host address.",
      "nixName": "database.host",
      "type": "string",
      "value": "127.0.0.1"
    },
    {
      "name": "database.name",
      "desc": "Database name.",
      "nixName": "database.name",
      "type": "string",
      "value": "gogs"
    },
    {
      "name": "database.password",
      "desc": "The password corresponding to database.user. Warning: this is stored in cleartext in the Nix store! Use database.passwordFile instead.",
      "nixName": "database.password",
      "type": "string",
      "value": ""
    },
    {
      "name": "database.passwordFile",
      "desc": "A file containing the password corresponding to database.user.",
      "nixName": "database.passwordFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "database.path",
      "desc": "Path to the sqlite3 database file.",
      "nixName": "database.path",
      "type": "string",
      "value": "${config.services.gogs.stateDir}/data/gogs.db"
    },
    {
      "name": "database.port",
      "desc": "Database host port.",
      "nixName": "database.port",
      "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
      "value": "3306"
    },
    {
      "name": "database.type",
      "desc": "Database engine to use.",
      "nixName": "database.type",
      "type": "one of \"sqlite3\", \"mysql\", \"postgres\"",
      "value": "\"sqlite3\""
    },
    {
      "name": "database.user",
      "desc": "Database user.",
      "nixName": "database.user",
      "type": "string",
      "value": "gogs"
    },
    {
      "name": "domain",
      "desc": "Domain name of your server.",
      "nixName": "domain",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "enable",
      "desc": "Enable Go Git Service.",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "extraConfig",
      "desc": "Configuration lines appended to the generated Gogs configuration file.",
      "nixName": "extraConfig",
      "type": "string",
      "value": ""
    },
    {
      "name": "group",
      "desc": "Group account under which Gogs runs.",
      "nixName": "group",
      "type": "string",
      "value": "gogs"
    },
    {
      "name": "httpAddress",
      "desc": "HTTP listen address.",
      "nixName": "httpAddress",
      "type": "string",
      "value": "0.0.0.0"
    },
    {
      "name": "httpPort",
      "desc": "HTTP listen port.",
      "nixName": "httpPort",
      "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
      "value": "3000"
    },
    {
      "name": "repositoryRoot",
      "desc": "Path to the git repositories.",
      "nixName": "repositoryRoot",
      "type": "string",
      "value": "${config.services.gogs.stateDir}/repositories"
    },
    {
      "name": "rootUrl",
      "desc": "Full public URL of Gogs server.",
      "nixName": "rootUrl",
      "type": "string",
      "value": "http://localhost:3000/"
    },
    {
      "name": "stateDir",
      "desc": "Gogs data directory.",
      "nixName": "stateDir",
      "type": "string",
      "value": "/var/lib/gogs"
    },
    {
      "name": "useWizard",
      "desc": "Do not generate a configuration and use Gogs\u2019 installation wizard instead. The first registered user will be administrator.",
      "nixName": "useWizard",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "user",
      "desc": "User account under which Gogs runs.",
      "nixName": "user",
      "type": "string",
      "value": "gogs"
    }
  ]
}
