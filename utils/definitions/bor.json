{
  "name": "Bor (Polygon)",
  "desc": "Deploy Bor Polygon with a one-click setup to operate a full Ethereum-compatible blockchain node on the Polygon PoS (Proof of Stake) network. Bor is essential for managing transactions and ensuring network security.",
  "longDesc": "**What is Bor?**\n\nBor is the official Golang implementation of the Polygon blockchain, designed for high-performance Ethereum-compatible operations. It acts as a consensus layer for the Polygon PoS network, handling transaction processing and state changes while maintaining compatibility with Ethereum’s EVM (Ethereum Virtual Machine).\n\n**Key Features:**\n\n- **One-Click Deployment:** Simplified installation using Docker, allowing quick access to Polygon’s infrastructure.\n- **Scalability:** Supports various node types, including validators, sentries, and archival nodes, to accommodate different scaling needs.\n- **Data Privacy:** All node operations occur within your infrastructure, ensuring complete control over sensitive data.\n- **API Compatibility:** Offers a comprehensive API for integrating with other applications and services within the Ethereum ecosystem.\n- **Multi-Network Support:** Operate on different networks, including Polygon Mainnet, Amory, and Mumbai Testnet, facilitating flexible deployment options.",
  "useCases": "- **Developers:** Build and test dApps (decentralized applications) on a reliable and secure blockchain environment.\n- **Enterprises:** Utilize Polygon’s capabilities to deploy scalable blockchain solutions that meet specific business requirements.\n- **Researchers:** Analyze blockchain data and performance metrics using a dedicated node.",
  "support": "- **Community Forums:** Engage with other developers and users on the [Polygon Community Forum](https://forum.polygon.technology) for insights and assistance.\n- **Documentation:** Access comprehensive installation and configuration guides on the [Bor GitHub Repository](https://github.com/maticnetwork/bor) and [Polygon Docs](https://docs.polygon.technology).\n- **Troubleshooting Help:** Explore common issues and resolutions in the [Bharwadia Help Centre](https://bitwarden.com/help/).\n\n This template outlines the core functionalities and practical applications of Bor within the Polygon ecosystem, emphasizing its benefits for developers and enterprises. For further details, you can visit the [official Bor documentation](https://github.com/maticnetwork/bor).",
  "flakes": [
    {
      "name": "openmesh-bor-package",
      "url": "github:CheesecakeLabs/openmesh-bor-package"
    }
  ],
  "nixName": "bor",
  "specs": {
    "ram": 16384,
    "storage": 4194304
  },
  "tags": ["RPC", "Validator", "Blockchain", "Polygon"],
  "website": "https://polygon.technology/",
  "implemented": false,
  "logo": "https://s2.coinmarketcap.com/static/img/coins/64x64/28321.png",
  "options": [
    {
      "name": "enable",
      "desc": "Enable Polygon Bor Node.",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "chain",
      "desc": "Name of the chain to sync ('amoy', 'mumbai', 'mainnet') or path to a genesis file.",
      "nixName": "chain",
      "type": "string",
      "value": "mainnet"
    },
    {
      "name": "syncmode",
      "desc": "Blockchain sync mode (only 'full' sync supported by Bor).",
      "nixName": "syncmode",
      "type": "string",
      "value": "full"
    },
    {
      "name": "gcmode",
      "desc": "Blockchain garbage collection mode.",
      "nixName": "gcmode",
      "type": "string",
      "value": "full"
    },
    {
      "name": "grpc",
      "desc": "Address for the GRPC API.",
      "nixName": "grpc",
      "type": "attribute set of (string)",
      "value": "{ }",
      "options": [
        {
          "name": "address",
          "desc": "Address for the GRPC API.",
          "nixName": "address",
          "type": "string",
          "value": "localhost:3131"
        }
      ]
    },
    {
      "name": "verbosity",
      "desc": "Logging verbosity for the server (5=trace|4=debug|3=info|2=warn|1=error|0=crit).",
      "nixName": "verbosity",
      "type": "integer",
      "value": "3"
    },
    {
      "name": "heimdallUrl",
      "desc": "URL of Heimdall service.",
      "nixName": "heimdallUrl",
      "type": "string",
      "value": "localhost:1317"
    },
    {
      "name": "logs",
      "desc": "Enable log retrieval.",
      "nixName": "logs",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "extraArgs",
      "desc": "Additional arguments for the Bor executable.",
      "nixName": "extraArgs",
      "type": "list of string",
      "value": "[ ]"
    },
    {
      "name": "bootNodes",
      "desc": "List of bootnodes to connect to.",
      "nixName": "bootNodes",
      "type": "list of string",
      "value": "[ \"enode://b8f1cc9c5d4403703fbf377116469667d2b1823c0daf16b7250aa576bacf399e42c3930ccfcb02c5df6879565a2b8931335565f0e8d3f8e72385ecf4a4bf160a@3.36.224.80:30303\" \"enode://8729e0c825f3d9cad382555f3e46dcff21af323e89025a0e6312df541f4a9e73abfa562d64906f5e59c51fe6f0501b3e61b07979606c56329c020ed739910759@54.194.245.5:30303\" ]"
    }
  ]
}
