{
  "name": "Ollama",
  "desc": "Deploy and run your own instance of Ollama to power applications with large language models (LLMs) locally. Ollama offers secure, on-premise AI capabilities, enabling the use of popular models such as Llama, Mistral, and custom AI models without sending data to third-party servers.",
  "longDesc": "**What is Ollama?**\n\nOllama is a cutting-edge platform designed for deploying and running large language models (LLMs) locally, without reliance on external cloud services. Its primary goal is to enable developers, enterprises, and individuals to harness the power of AI models like Llama, Mistral, and Codextral entirely on local infrastructure, ensuring maximum privacy and control.\n\n**Key Features:**\n\n- **Local AI Execution:** Run LLMs without sending data to third-party services, maintaining full control over sensitive information.\n- **Multi-Model Support:** Access a library of models, including Llama 3, Phi 3, and Mistral, each suited for specific use cases like chat, coding assistance, or natural language processing.\n- **Seamless Integration:** Ollama provides compatibility with the OpenAI API format, making it easy for users to transition existing applications.\n- **GPU Acceleration:** Leverage Nvidia GPUs to optimize model performance, with Docker containers making deployment efficient across various platforms.\n- **Configurable CLI & API:** Users can interact with models through an easy-to-use command line interface or via a REST API, providing flexibility for both quick experiments and production-level integrations.",
  "useCases": "- **Code Autocompletion & Developer Tools:** Improve productivity by running local code assistants (e.g., Codextral) for autocompletion and debugging.\n- **Enterprise AI Solutions:** Build private chatbots and automation tools without exposing internal data to external cloud providers.\n- **AI in Research & Education:** Deploy educational or research-focused LLMs locally, ensuring minimal infrastructure dependency and full control over datasets.",
  "support": "- **Community Channels:**\n   - Join the [Ollama Discord](https://discord.com) for community assistance and real-time support.\n   - Explore and contribute via Ollama's GitHub repository for open-source collaboration.\n- **FAQs & Troubleshooting Resources:**\n   - [Ollama Documentation on GitHub](https://github.com/ollama/ollama)\n   - Blog updates on Docker and OpenAI API integrations: [Ollama Blog](https://ollama.com)\n- **Direct Assistance:**\n   - Contact Xnode support for infrastructure-related issues.\n   - Use the [Ollama Help Center](https://ollama.com) for documentation and community-driven solutions.\n\n This template offers a comprehensive guide for deploying and managing the Ollama server through Xnode. For more details, you can refer to the [official Ollama site](https://ollama.com) and its documentation on GitHub.",
  "nixName": "ollama",
  "specs": {
    "ram": 8192,
    "storage": 12280
  },
  "tags": ["LLM", "AI"],
  "website": "https://github.com/ollama/ollama",
  "implemented": true,
  "logo": "https://avatars.githubusercontent.com/u/151674099",
  "options": [
    {
      "name": "acceleration",
      "desc": "What interface to use for hardware acceleration.  null: default behavior  if nixpkgs.config.rocmSupport is enabled, uses rocm if nixpkgs.config.cudaSupport is enabled, uses cuda otherwise defaults to false  false: disable GPU, only use CPU rocm: supported by most modern AMD GPUs  may require overriding gpu type with services.ollama.rocmOverrideGfx if rocm doesn\u2019t detect your AMD gpu  cuda: supported by most modern NVIDIA GPUs",
      "nixName": "acceleration",
      "type": "null or one of false, \"rocm\", \"cuda\"",
      "value": "null"
    },
    {
      "name": "enable",
      "desc": "Whether to enable ollama server for local large language models.",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "environmentVariables",
      "desc": "Set arbitrary environment variables for the ollama service. Be aware that these are only seen by the ollama server (systemd service), not normal invocations like ollama run. Since ollama run is mostly a shell around the ollama server, this is usually sufficient.",
      "nixName": "environmentVariables",
      "type": "attribute set of string",
      "value": "{ }"
    },
    {
      "name": "home",
      "desc": "The home directory that the ollama service is started in. See also services.ollama.writablePaths and services.ollama.sandbox.",
      "nixName": "home",
      "type": "string",
      "value": "%S/ollama"
    },
    {
      "name": "host",
      "desc": "The host address which the ollama server HTTP interface listens to.",
      "nixName": "host",
      "type": "string",
      "value": "127.0.0.1"
    },
    {
      "name": "loadModels",
      "desc": "The models to download as soon as the service starts. Search for models of your choice from: https://ollama.com/library",
      "nixName": "loadModels",
      "type": "list of string",
      "value": "[ ]"
    },
    {
      "name": "models",
      "desc": "The directory that the ollama service will read models from and download new models to. See also services.ollama.writablePaths and services.ollama.sandbox if downloading models or other mutation of the filesystem is required.",
      "nixName": "models",
      "type": "string",
      "value": "%S/ollama/models"
    },
    {
      "name": "openFirewall",
      "desc": "Whether to open the firewall for ollama. This adds services.ollama.port to networking.firewall.allowedTCPPorts.",
      "nixName": "openFirewall",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "port",
      "desc": "Which port the ollama server listens to.",
      "nixName": "port",
      "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
      "value": "11434"
    },
    {
      "name": "rocmOverrideGfx",
      "desc": "Override what rocm will detect your gpu model as. For example, make rocm treat your RX 5700 XT (or any other model) as an RX 6900 XT using a value of 10.3.0 (gfx 1030). This sets the value of HSA_OVERRIDE_GFX_VERSION. See ollama\u2019s docs for details.",
      "nixName": "rocmOverrideGfx",
      "type": "null or string",
      "value": "null"
    }
  ]
}
