{
  "name": "rclone",
  "desc": "Deploy Rclone to facilitate efficient data management across various cloud storage services. Rclone acts as a command-line tool that allows users to sync files and directories to and from multiple cloud providers seamlessly.",
  "longDesc": "Rclone is an open-source command-line program designed for managing files on cloud storage. It supports over 40 different cloud storage services, enabling users to perform operations like syncing, moving, and copying files across platforms.\n\n**Key Features:**\n- **One-Click Deployment:** Quickly set up Rclone using Docker for easy installation and management.\n- **Scalability:** Handles large datasets and supports multiple cloud storage providers, making it suitable for both personal use and enterprise environments.\n- **Privacy and Security:** Offers encryption options for files both in transit and at rest, ensuring data security.\n- **API Compatibility:** Integrates with various cloud storage services using their APIs, allowing for flexible and automated file management.\n- **Multi-Platform Support:** Runs on Windows, macOS, and Linux, providing cross-platform compatibility for users.",
  "useCases": "- **Developers:** Use Rclone for automating file uploads and backups to cloud storage services as part of their development workflow.\n- **Enterprises:** Manage and synchronize large amounts of data across multiple cloud providers, facilitating easy data access and redundancy.\n- **Educators:** Teach students about cloud storage management and data synchronization using real-world tools.",
  "support": "- **Community Forums:** Engage with the Rclone community for support and discussions through the [Rclone GitHub Repository](https://github.com/rclone/rclone) and the [Rclone Forum](https://forum.rclone.org/.\n- **Documentation:** Comprehensive guides and user manuals are available at the [Rclone Documentation](https://rclone.org/docs/) for detailed user reference.\n- **Troubleshooting Help:** Access the Issues section on GitHub to report bugs or feature requests.\n\nThis template provides an overview of Rcloneâ€™s functionalities and practical applications, emphasizing its importance in managing and synchronizing files across cloud storage services. For more detailed information, visit the [official Rclone website](https://rclone.org/).",
  "tags": ["Backup"],
  "website": "https://rclone.org",
  "implemented": false,
  "logo": "https://rclone.org/img/rclone-32x32.png",
  "specs": {
    "ram": 0,
    "storage": 0
  },
  "nixName": "rclone",
  "options": [
    {
      "name": "backup/restic.nix",
      "desc": "Path to the file containing rclone configuration. This file mustcontain configuration for the remote specified in this backup set andalso must be readable by root. Options set in rcloneConfigwill override those set in this file.",
      "nixName": "relatedOption.restic.backups.<name>.rcloneConfigFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "backup/restic.nix",
      "desc": "Configuration for the rclone remote being used for backup. See theremote\u2019s specific options under rclone\u2019s docs at https://rclone.org/docs/. Whenspecifying option names, use the \u201cconfig\u201d name specified in the docs.For example, to set --b2-hard-delete for a B2 remote, usehard_delete = true in the attribute set. Warning: Secretsset in here will be world-readable in the Nix store! Consider using thercloneConfigFile option instead to specify secret valuesseparately. Note that options set here will override those set in theconfig file.",
      "nixName": "relatedOption.restic.backups.<name>.rcloneConfig",
      "type": "null or (attribute set of (string or boolean))",
      "value": "null"
    },
    {
      "name": "monitoring/prometheus/exporters.nix",
      "desc": "Path to the file containing rclone configuration. This file mustcontain configuration for the remote specified in this backup set andalso must be readable by root.Options set in rcloneConfig will override those set inthis file.",
      "nixName": "relatedOption.prometheus.exporters.restic.rcloneConfigFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "monitoring/prometheus/exporters.nix",
      "desc": "Configuration for the rclone remote being used for backup. See theremote\u2019s specific options under rclone\u2019s docs at https://rclone.org/docs/. Whenspecifying option names, use the \u201cconfig\u201d name specified in the docs.For example, to set --b2-hard-delete for a B2 remote, usehard_delete = true in the attribute set.Secrets set in here will be world-readable in the Nix store! Considerusing the rcloneConfigFile option instead to specify secretvalues separately. Note that options set here will override those set inthe config file.",
      "nixName": "relatedOption.prometheus.exporters.restic.rcloneConfig",
      "type": "attribute set of (string or boolean)",
      "value": "{ }"
    },
    {
      "name": "backup/restic.nix",
      "desc": "Options to pass to rclone to control its behavior. See https://rclone.org/docs/#optionsfor available options. When specifying option names, strip the leading--. To set a flag such as --drive-use-trash,which does not take a value, set the value to the Booleantrue.",
      "nixName": "relatedOption.restic.backups.<name>.rcloneOptions",
      "type": "null or (attribute set of (string or boolean))",
      "value": "null"
    },
    {
      "name": "monitoring/prometheus/exporters.nix",
      "desc": "Options to pass to rclone to control its behavior. See https://rclone.org/docs/#optionsfor available options. When specifying option names, strip the leading--. To set a flag such as --drive-use-trash,which does not take a value, set the value to the Booleantrue.",
      "nixName": "relatedOption.prometheus.exporters.restic.rcloneOptions",
      "type": "attribute set of (string or boolean)",
      "value": "{ }"
    }
  ]
}
