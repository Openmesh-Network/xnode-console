{
  "name": "lemmy-server",
  "desc": "Deploy Lemmy Server to create a decentralized, open-source alternative to Reddit. Lemmy allows users to create and participate in communities, share content, and engage in discussions without the limitations of centralized platforms.",
  "longDesc": "Lemmy is a federated social media platform that enables users to create communities (called ‘lemmy instances’) similar to subreddits on Reddit. It is built with Rust and emphasizes decentralization, allowing different instances to communicate while maintaining user control over their data.\n\n**Key Features:**\n- **One-Click Deployment:** Easily set up Lemmy using Docker or other containerization options for a straightforward installation process.\n- **Scalability:** Designed to handle a large number of users and posts, suitable for both small personal communities and larger federated networks.\n- **Privacy and Security:** Ensures that user data remains private and secure, without advertisements or tracking common on centralized platforms.\n- **API Compatibility:** Offers an API for integration with other applications, enabling custom features and enhancements.\n- **User-Friendly Interface:** Provides an intuitive interface for navigating communities, making posts, and engaging in discussions.",
  "useCases": "- **Community Builders:** Use Lemmy to create and manage online forums for niche interests or topics, promoting user engagement and interaction.\n- **Developers:** Integrate Lemmy into existing applications to provide social features, leveraging its federated architecture.\n- **Educators:** Utilize Lemmy as a platform for academic discussions, group projects, or resource sharing in a collaborative environment.",
  "support": "- **Community Forums:** Engage with the Lemmy community for support and discussions through the [Lemmy GitHub Repository](https://github.com/LemmyNet/lemmy).\n- **Documentation:** Comprehensive guides and user manuals are available at the [Lemmy Documentation](https://join-lemmy.org/docs/) for detailed reference on setup and configuration.\n- **Troubleshooting Help:** Access the issues section on GitHub to report bugs and find community-contributed solutions.\n\nThis template provides an overview of Lemmy Server’s functionalities and practical applications, emphasizing its role as a decentralized alternative to traditional social media platforms. For more detailed information, visit the [official Lemmy GitHub page](https://github.com/LemmyNet/lemmy).",
  "nixName": "lemmy",
  "specs": {
    "ram": 0,
    "storage": 0
  },
  "tags": [],
  "website": "https://join-lemmy.org",
  "implemented": false,
  "logo": "https://join-lemmy.org/static/assets/icons/favicon.svg",
  "options": [
    {
      "name": "adminPasswordFile",
      "desc": "File which contains the value of setup.admin_password.",
      "nixName": "adminPasswordFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "caddy.enable",
      "desc": "Whether to enable exposing lemmy with the caddy reverse proxy.",
      "nixName": "caddy.enable",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "database.createLocally",
      "desc": "Whether to enable creation of database on the instance.",
      "nixName": "database.createLocally",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "database.uri",
      "desc": "The connection URI to use. Takes priority over the configuration file if set.",
      "nixName": "database.uri",
      "type": "null or string",
      "value": "null"
    },
    {
      "name": "database.uriFile",
      "desc": "File which contains the database uri.",
      "nixName": "database.uriFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "enable",
      "desc": "Whether to enable lemmy a federated alternative to reddit in rust.",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "nginx.enable",
      "desc": "Whether to enable exposing lemmy with the nginx reverse proxy.",
      "nixName": "nginx.enable",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "pictrsApiKeyFile",
      "desc": "File which contains the value of pictrs.api_key.",
      "nixName": "pictrsApiKeyFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "server.package",
      "desc": "The lemmy-server package to use.",
      "nixName": "server.package",
      "type": "package",
      "value": "pkgs.lemmy-server"
    },
    {
      "name": "settings",
      "desc": "Lemmy configuration",
      "nixName": "settings",
      "type": "JSON value",
      "value": "{ }"
    },
    {
      "name": "settings.captcha.difficulty",
      "desc": "The difficultly of the captcha to solve.",
      "nixName": "settings.captcha.difficulty",
      "type": "one of \"easy\", \"medium\", \"hard\"",
      "value": "\"medium\""
    },
    {
      "name": "settings.captcha.enabled",
      "desc": "Enable Captcha.",
      "nixName": "settings.captcha.enabled",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "settings.hostname",
      "desc": "The domain name of your instance (eg \u2018lemmy.ml\u2019).",
      "nixName": "settings.hostname",
      "type": "string",
      "value": "null"
    },
    {
      "name": "settings.port",
      "desc": "Port where lemmy should listen for incoming requests.",
      "nixName": "settings.port",
      "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
      "value": "8536"
    },
    {
      "name": "smtpPasswordFile",
      "desc": "File which contains the value of email.smtp_password.",
      "nixName": "smtpPasswordFile",
      "type": "null or path",
      "value": "null"
    },
    {
      "name": "ui.package",
      "desc": "The lemmy-ui package to use.",
      "nixName": "ui.package",
      "type": "package",
      "value": "pkgs.lemmy-ui"
    },
    {
      "name": "ui.port",
      "desc": "Port where lemmy-ui should listen for incoming requests.",
      "nixName": "ui.port",
      "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
      "value": "1234"
    }
  ]
}
